# smart pane switching with awareness of vim splits
# requires fiddling with .vimrc see
# http://www.codeography.com/2013/06/19/navigating-vim-and-tmux-splits
bind -n ^H run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys ^H) || tmux select-pane -L"
bind -n ^J run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys ^J) || tmux select-pane -D"
bind -n ^K run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys ^K) || tmux select-pane -U"
bind -n ^L run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys ^L) || tmux select-pane -R"

# Mouse works as expected
set -g mouse on

set -g prefix C-a
unbind C-b
bind C-a send-prefix

set -g status-keys vi
setw -g mode-keys vi
bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'

set -g status-bg black
set -g status-fg white
set -g default-terminal "screen-256color"


#border colours
set -g pane-border-style fg=blue
set -g pane-active-border-style fg=blue
set -g pane-active-border-style bg=default


# Reload config with a key
bind-key r source-file ~/.tmux.conf \; display "Config reloaded!"

